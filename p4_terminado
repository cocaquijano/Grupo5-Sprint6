CUARTA PROBLEM√ÅTICA:

1) select count(*) as cantidad, sucu.branch_name as sucursal_name 
from cliente as cl 
JOIN sucursal as sucu on cl.branch_id = sucu.branch_id 
GROUP by sucursal_name 
ORDER by branch_name asc 

2) select count(*) as cantidad_empleados, sucu.branch_name as sucursal_name, cl.customer_name as cliente_name
from cliente as cl 
JOIN sucursal as sucu on cl.branch_id = sucu.branch_id 
JOIN empleado as em on em.branch_id = sucu.branch_id 
GROUP by sucursal_name, cliente_name 

4)select sucu.branch_name as sucursal_name, cast(avg(pr.loan_total)AS DECIMAL(10,2)) as promedio_total
from prestamo as pr
JOIN cliente as cl on cl.customer_id = pr.customer_id
JOIN sucursal as sucu on sucu.branch_id = cl.branch_id
GROUP by sucursal_name

5) 

CREATE TABLE `auditoria_cuenta` (
  `id` number primary key,
  `old_id` mediumint default NULL,
  `new_id` mediumint default NULL,
  `old_balance` mediumint default NULL,
  `new_balance` mediumint default NULL,
  `old_iban` TEXT default NULL,
  `new_iban` TEXT default NULL,
  `old_type` TEXT default NULL,
  `new_type` TEXT default NULL,
  `user_action` TEXT default NULL,
  `created_at` varchar(255),
  PRIMARY KEY (`id`)
) AUTO_INCREMENT=1;

5)a) 

CREATE TRIGGER register_cuenta_audit
AFTER UPDATE ON cuenta
WHEN old.balance <> new.balance OR old.iban <> new.iban OR old.tipo_de_cuenta <> new.tipo_de_cuenta

BEGIN


INSERT INTO prueba_auditoria(old_id,
  new_id,
  old_balance,
  new_balance,
  old_iban,
  new_iban,
  old_type,
  new_type,
  user_action,
  created_at
)
VALUES( old.id, new.id, old.balance, new.balance, old.iban, new.iban, old.tipo_de_cuenta, new.tipo_de_cuenta, 'UPDATE'(VALIDAR), DATETIME('NOW'));

END

5)b)

UPDATE cuenta SET balance = cuenta.balance - 100 WHERE account_id IN (select account_id where account_id >= 10 AND account_id <= 14)

6) CREATE INDEX dni_index ON cliente(customer_DNI)

7) CREATE TABLE `movimientos` (
  `id_movimientos` number primary key,
  `numero_de_cuenta` mediumint default NULL,
  `monto` varchar(100) default NULL,
  `tipo_de_operacion` TEXT default NULL,
  `time` varchar(255),
  PRIMARY KEY (`id`)
) AUTO_INCREMENT=1;

7)a-b-c)

BEGIN TRANSACTION

UPDATE cuenta set balance = cuenta.balance - 1000 where account_id = 200
UPDATE cuenta set balance = cuenta.balance + 1000 where account_id = 400
INSERT INTO movimientos VALUES(200, -1000, 'TRANSFERENCIA', datetime('now')),(400, 1000, 'TRANSFERENCIA', datetime('now'))

COMMIT;
